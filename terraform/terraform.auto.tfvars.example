# Terraform Configuration Template
# Copy to terraform.auto.tfvars and fill in your values

# ============================================================================
# AWS Configuration
# ============================================================================

aws_region   = "us-east-1"  # Change to your preferred region
project_name = "musicvibe"  # Project name for resource tagging

# ============================================================================
# VPC & Networking
# ============================================================================

# Use your default VPC ID (check AWS Console > VPC > Your VPCs)
# Or leave empty "" to use default
vpc_id = ""

# Your local IP address for SSH access
# Find it: curl ifconfig.me
# Include CIDR: e.g., "203.0.113.45/32"
allowed_ssh_ip = "YOUR_PUBLIC_IP/32"

# ============================================================================
# EC2 Configuration
# ============================================================================

# EC2 instance type (DON'T CHANGE - optimized for this setup)
instance_type = "t3.medium"

# SSH key pair name (must already exist in your AWS account)
# Create one: AWS Console > EC2 > Key Pairs > Create Key Pair
ssh_key_name = "your-ec2-key-pair-name"

# ============================================================================
# Docker Hub (Optional - for pushing Docker images)
# ============================================================================

# Leave empty "" if not using
docker_hub_username = ""

# ============================================================================
# Cost Optimization - Toggle Instances (set false to disable)
# ============================================================================

feature_flags = {
  # Prometheus + Grafana instance (~$40/month)
  # Set to false if you don't need monitoring
  enable_monitoring_instance = true

  # Nexus + SonarQube instance (~$40/month)
  # Set to false if you don't need artifact management
  enable_tools_instance = true

  # Second Kubernetes worker (~$40/month)
  # Set to false to use only 1 worker + master
  enable_worker_2 = true
}

# ============================================================================
# EXAMPLE FILLED VALUES
# ============================================================================
# 
# aws_region                = "us-east-1"
# project_name              = "musicvibe"
# vpc_id                    = ""
# allowed_ssh_ip            = "203.0.113.45/32"
# instance_type             = "t3.medium"
# ssh_key_name              = "my-musicvibe-key"
# docker_hub_username       = "myusername"
# feature_flags = {
#   enable_monitoring_instance = true
#   enable_tools_instance      = true
#   enable_worker_2            = true
# }

# ============================================================================
# COST ESTIMATES
# ============================================================================
#
# With ALL instances enabled (feature_flags = true):
#   5 × t3.medium = ~$200-250/month
#
# Minimum setup (enable_worker_2 = false, enable_monitoring = false):
#   3 × t3.medium = ~$100-120/month
#
# Development mode (disable monitoring and extra worker):
#   3 × t3.medium = ~$100-120/month
#
# Note: These are estimates. Check AWS pricing for your region.
#       To save 90%, run: aws ec2 stop-instances --instance-ids <ids>
#       To destroy everything: terraform destroy

# ============================================================================
# QUICK SETUP CHECKLIST
# ============================================================================
#
# Before running terraform apply:
# [ ] AWS account created and logged in
# [ ] AWS CLI configured: aws configure
# [ ] SSH key pair created in EC2 (us-east-1 or your region)
# [ ] Your public IP obtained: curl ifconfig.me
# [ ] This file filled with your values
#
# Then:
# [ ] terraform init
# [ ] terraform plan
# [ ] terraform apply
# [ ] Note the output IPs and URLs
# [ ] SSH to master and run /home/ubuntu/init-k8s-master.sh
# [ ] Configure Jenkins, SonarQube, Nexus (see README.md)
# [ ] Create Jenkins pipeline and build
#
# Done!
